Il existe une relation d'ordre est bien fondé sur l'ensemble des
données (l'explicité si nécessaire).

On peut alors supposer le précédent pour construire le suivant

S'assurer qu'on prévoit un cas pour le(s) bulbe(s).

S'assurer qu'on pèle l'argument.

                (*1*)
  let factorielle n = match n with 
  | 0 -> 1 (*4*) 
  | n -> n * factorielle(n-1) 
       (*5*)    (*2*)   (*3*) 

(*1*) L'ensemble des données, N, est bien fondé 

(*2*) On peut supposer le précédent factorielle(n-1) 

(*3*) On pèle l'argument

(*4*) Cas pour le bulbe 

(*5*) Méthode de construction du suivant qu'on a choisi (est-ce la
bonne ?)

La construction, la définition de l'ensemble des données est
inductive.

On a donc un argument instance d'une application FINIE de la
définition. Il a donc des pelure et un bulbe, on peut le peler et être
sur d'atteindre le bulbe, c'est-à-dire que la récurrence terminera,
sera ce qu'elle doit être, un processus fini.

type
